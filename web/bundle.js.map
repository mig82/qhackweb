{
  "version": 3,
  "sources": [
    "../../../../../../../usr/local/lib/node_modules/watchify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "js/app.js",
    "js/ctrl/CareerSelectCtrl.js",
    "js/ctrl/CustMsgCtrl.js",
    "js/ctrl/GuestSelectCtrl.js",
    "js/ctrl/LoginCtrl.js",
    "js/ctrl/NavBarCtrl.js",
    "js/ctrl/ReportCtrl.js",
    "js/ctrl/SkillSelectCtrl.js",
    "js/ctrl/StatusCtrl.js",
    "js/ctrl/UsrInfoCtrl.js",
    "js/ctrl/WizardCtrl.js",
    "js/dir/skillsList.js",
    "js/dir/spiderweb-chart.js",
    "js/dir/vert-group-bar-chart.js",
    "js/models/Skill.js",
    "js/models/Survey.js",
    "js/srv/SessionSrv.js",
    "main.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtzxlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACn
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\n\"use strict\";\n\nvar app = angular.module('qhack', ['ui.router', 'ui.bootstrap', 'ui.tinymce', 'ui.select', 'ngSanitize', 'ngCookies', 'ngAnimate', 'ngTouch'])\n\n.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n\n\t$urlRouterProvider.otherwise(\"/login\");\n\n\t// Now set up the states\n\t$stateProvider\n\t\n\t.state('login', {\n\t\turl: \"/login\",\n\t\ttemplateUrl: \"views/login.html\"\n\t})\n\n\t.state('main', {\n\t\turl: \"/main?access_token\",\n\t\ttemplateUrl: \"views/main.html\",\n\t\tcontroller: function($rootScope, $stateParams) {\n\t\t\tconsole.log(\"0) Received access_token %o\", $stateParams.access_token);\n\t\t\t$rootScope.token = $stateParams.access_token;\n\t\t}\n\t})\n\n\t.state('main.home', {\n\t\turl: \"/home\",\n\t\ttemplateUrl: \"views/home.html\"\n\t})\n\n\t.state('main.wizard', {\n\t\turl: \"/wizard\",\n\t\ttemplateUrl: \"views/wizard.html\"\n\t})\n\n\t.state('main.status', {\n\t\turl: \"/status\",\n\t\ttemplateUrl: \"views/status.html\"\n\t})\n\n\t.state('main.report', {\n\t\turl: \"/report\",\n\t\ttemplateUrl: \"views/report.html\"\n\t});\n\n\n}])\n\n.run(['$state', function ($state) {\n\n\tconsole.log('Starting QHack...');\n\n\t//gettextCatalog.setCurrentLanguage('en');\n\t//gettextCatalog.debug = true;\n}]);\n",
    "\"use strict\";\n\nangular.module('qhack').controller('CareerSelectCtrl', ['$scope', function($scope){\n\n\t$scope.careers = [\n\t\t{title: \"Consulting\"},\n\t\t{title: \"Sales\"},\n\t\t{title: \"Human Resources\"},\n\t\t{title: \"Marketing\"}\n\t];\n\n\t$scope.levels = [\n\t\t{title: \"junior\"},\n\t\t{title: \"senior\"},\n\t\t{title: \"mid management\"},\n\t\t{title: \"management\"},\n\t\t{title: \"senior management\"},\n\t\t{title: \"executive leadership\"}\n\t];\n\n\t$scope.industries = ['financial services', 'energy', 'telecomunications', 'internet'];\n\t\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('CustMsgCtrl', ['$scope', '$sce', function($scope, $sce){\n\n\t$scope.save = function(){\n\t\t$scope.trustedCustMsg = $sce.trustAsHtml($scope.survey.custMsg);\n\t};\n\t\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('GuestSelectCtrl', ['$scope', function($scope){\n\n\t$scope.feedbackTypes = [\n\t\t{id: 1, name: \"self\"\t, desc: \"This is you\"},\n\t\t{id: 2, name: \"senior\"\t, desc: \"Someone with a professional category or seniority level above yours. Not necessarily someone you reported to but who had good visibility of your work.\"},\n\t\t{id: 3, name: \"peer\"\t, desc: \"Someone with the same level of seniority as you. Maybe someone in your team or in a team collaborating with yours.\"},\n\t\t{id: 4, name: \"junior\"\t, desc: \"Someone with less seniority than you. Not necessarily reporting to you but with good visibility of your work.\"},\n\t\t{id: 5, name: \"other\"\t, desc: \"Someone external to your team and hierarchy but who had a stake in the work you did. A client, partner, vendor, an area who depended on your work, etc.\"},\n\t];\n\n\t$scope.guestOptions = [\n\t\t{name: \"MarÃ­a Montes\", \t\ttype: {id: 1, name: \"senior\"}, email: \"foo@bar.com\", selected: false},\n\t\t{name: \"Carlos Cuevas\", \ttype: {id: 1, name: \"peer\"},   email: \"foo@bar.com\", selected: false},\n\t\t{name: \"Carmen Conde\", \t\ttype: {id: 1, name: \"junior\"}, email: \"foo@bar.com\", selected: false}\n\t];\n\t\n\t$scope.addGuestOption = function(){\n\t\t$scope.guestOptions.push({\n\t\t\tname: \"\",\n\t\t\ttype: {},\n\t\t\temail: \"\",\n\t\t\tselected: false\n\t\t});\n\t};\n\n\t$scope.removeGuestOptionAt = function(index){\n\t\tvar guest = $scope.guestOptions[index]\n\t\t$scope.survey.removeGuest(guest);\n\t\t$scope.guestOptions.splice(index, 1);\n\t\t$scope.calcGuestsSummary();\n\t}\n\n\t$scope.toggleGuestSelection = function(guest, index){\n\t\t\n\t\tconsole.log(\"toggling %o %o\", guest, index)\n\t\tif(guest.selected){\n\t\t\t$scope.survey.addGuest(guest);\n\t\t}\n\t\telse{\n\t\t\t$scope.survey.removeGuest(guest);\n\t\t}\n\t};\n\n\t$scope.save = function(){\n\t\t//Ojo:, pueden haber guests vacÃ­os en la lista.\n\t}\n\n\t$scope.calcGuestsSummary = function() {\n\t\t/*$scope.survey.gSumm = _.countBy($scope.survey.guests, function(guest){\n\t\t\tif(guest.type.name)\n\t\t\treturn guest.type.name;\n\t\t});*/\n\t\t$scope.survey.recalcGuestsSummary();\n\t};\n\n\t$scope.calcGuestsSummary();\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('LoginCtrl', ['$scope', '$state', function($scope, $state){\n\n\t$scope.authUrls = {};\n\t\n\t/*ConfigSrv.getConfig().then(function(config){\n\t\t$scope.authUrls.facebook =\tconfig.nodeServerUrl + config.authPaths.facebook;\n\t\t$scope.authUrls.google =\tconfig.nodeServerUrl + config.authPaths.google;\n\t\t$scope.authUrls.twitter =\tconfig.nodeServerUrl + config.authPaths.twitter;\n\t});*/\n\t\n\n\t$scope.login = function(){\n\n\t\tconsole.log(\"Requesting authentication...4\");\n\n\t\t/*SessionSrv.getUserByUserPassword().then(function(user){\n\t\t\t\n\t\t\tif(user){\n\t\t\t\tconsole.log(\"Authentication accepted for %o\", user);\n\t\t\t\t$state.go('main.home');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"Authentication denied for %o\", $scope.user);\n\t\t\t\t//$location.path('/login');\n\t\t\t}\n\t\t});*/\n\t};\n}]);\n\n\n\t",
    "\"use strict\";\nangular.module('qhack').controller('NavBarCtrl', ['$scope', '$document', '$timeout', 'SessionSrv', function($scope, $document, $timeout, SessionSrv){\n\n\tvar HIDE_CLASS = \"collapsable-navbar\";\n\tvar SHOW_CLASS = \"\";\n\n\t$scope.user = SessionSrv.getUser();\n\t$scope.navbarClass = HIDE_CLASS;\n\tvar isOpen = 0;\n\n\t//if (window.matchMedia('screen and (max-width: 768px)').matches) {}\n\n\tvar openNavbar = function(){\n\t\t//console.log(\"1 openNavbar %o\", isOpen);\n\t\tif(!isOpen){\n\t\t\t$scope.navbarClass = SHOW_CLASS;\n\t\t\tisOpen = 0;\n\t\t\t$document.bind('click', closeNavbar);\n\t\t}\n\t};\n\n\tvar closeNavbar = function(){\n\t\t//console.log(\"2 closeNavbar\");\n\t\t//isOpen > 1\n\t\tif(isOpen){\n\t\t\t//console.log(\"   3.b Will close %s\", isOpen);\n\t\t\t$scope.navbarClass = HIDE_CLASS;\n\t\t\tisOpen = 0;\n\t\t\t$scope.$apply();\n\t\t\t$document.unbind('click', closeNavbar);\n\t\t}\n\t\t//isOpen == 0\n\t\telse{\n\t\t\t//console.log(\"   3.a Will not close %s\", isOpen);\n\t\t\tisOpen++;\n\t\t}\n\t};\n\n\t$scope.openNavbar = openNavbar;\n\t//window.$document = $document;\n\t//window.$scope = $scope;\n\n\n\t/************************************************/\n\n\t$scope.menu = [\n\t\t{title: \"home\", \tgotoState: \"main.home\", \tactiveClass: \"active\"},\n\t\t{title: \"new\", \t\tgotoState: \"main.wizard\", \tactiveClass: \"\"},\n\t\t{title: \"settings\", gotoState: \"main.settings\", activeClass: \"\"},\n\t];\n\t//TODO: query $state or NavigationSrv to add active class to current tab.\n\n\t$scope.toggleActiveClass = function(index){\n\t\tvar l = $scope.menu.length;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\n\t\t\tif(i == index){\n\t\t\t\t$scope.menu[i].activeClass = \"active\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$scope.menu[i].activeClass = \"\";\n\t\t\t}\n\t\t};\n\t}\n\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('ReportCtrl', ['$scope', 'SessionSrv', function($scope, SessionSrv){\n\n\t//Let's assume we get the survey results form the server...\n\n\tfunction getRandomFloat(){\n\t\treturn Math.ceil10((Math.random()*10)%5, -2);\n\t}\n\n\tvar tolerance = 0.5;\n\tfunction calcRagMap(diff){\n\t\t\n\t\tvar rag = {\n\t\t\tr: false,\n\t\t\ta: false,\n\t\t\tg: false,\n\t\t};\n\n\t\tif(Math.abs(diff) < tolerance) rag.a = true;\n\t\telse if(diff > 0) rag.g = true;\n\t\telse rag.r = true;\n\n\t\treturn rag;\n\t}\n\n\t/*var data2 = [\n\t\t{\n\t\t\tclassName: \"self\",\n\t\t\taxes: [\n\t\t\t\t{axis: \"strength\", value: 13}, \n\t\t\t\t{axis: \"intelligence\", value: 1}, \n\t\t\t\t{axis: \"charisma\", value: 8}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tclassName: \"rest\",\n\t\t\taxes: [\n\t\t\t\t{axis: \"strength\", value: 3}, \n\t\t\t\t{axis: \"intelligence\", value: 15}, \n\t\t\t\t{axis: \"charisma\", value: 4}\n\t\t\t]\n\t\t}\n\t];*/\n\n\t//var data = [ [],[] ];\n\tvar data = [{\n\t\t\tclassName: \"self\",\n\t\t\taxes: []\n\t\t},{\n\t\t\tclassName: \"rest\",\n\t\t\taxes: []\n\t\t}\n\t];\n\n\tvar survey = SessionSrv.getSurvey();\n\tvar skills = survey.skills;\n\tvar l = skills.length;\n\n\tfor (var i = 0; i < l; i++) {\n\t\tvar skill = skills[i];\n\t\t\n\t\tvar scoreYou\t= { axis: skill.name, value: getRandomFloat() };\n\t\tdata[0].axes.push(scoreYou);\n\n\t\tvar scoreRest = { axis: skill.name, value: getRandomFloat() };\n\t\tdata[1].axes.push(scoreRest);\n\t};\n\t$scope.data = data;\n\t$scope.survey = survey;\n\n\tvar ragClasses = {};\n\tvar skillCount = data[0].axes.length;\n\tvar tolerance = 0.5;\n\tfor(var k = 0; k < skillCount; k++){\n\t\tvar selfScore = data[0].axes[k].value;\n\t\tvar restScore = data[1].axes[k].value;\n\t\tvar diff = selfScore - restScore;\n\t\tvar axis = data[0].axes[k].axis;\n\n\t\tif( diff > tolerance ){\n\t\t\t//ragClasses[axis] = \"rag-green\";\n\t\t\tragClasses[axis] = \"bg-success text-success\";\n\t\t}\n\t\telse if ( diff < -tolerance ) {\n\t\t\t//ragClasses[axis] = \"rag-red\"\n\t\t\tragClasses[axis] = \"bg-danger text-danger\"\n\t\t}\n\t\telse{\n\t\t\t//ragClasses[axis] = \"rag-amber\"\n\t\t\tragClasses[axis] = \"bg-warning text-warning\"\n\t\t}\n\t}\n\t$scope.ragClasses = ragClasses;\n\n\n\n\t/*******************************************/\n\t/********This is for the bar charts*********/\n\t/*******************************************/\n\tvar skills = _.pluck(survey.skills, 'name');\n\t/*var data1 = {\n\t\tlabels: skills,\n\t\tseries: [\n\t\t\t{\n\t\t\t\tlabel: 'seniors',\n\t\t\t\tvalues: [4, 8, 15, 16, 23, 12]\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'peers',\n\t\t\t\tvalues: [12, 33, 22, 11, 13, 25]\n\t\t\t}\n\t\t]\n\t};*/\n\n\t\n\n\tvar dataSets = [];\n\tvar diffs = {};\n\tvar skillsCount = skills.length;\n\n\tfor(var k = 0; k < skillsCount; k++){\n\t\tvar skill = skills[k];\n\t\tvar d0 = {\n\t\t\tlabels: [skill],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'seniors',\n\t\t\t\t\tclass: 'bar-seniors',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'peers',\n\t\t\t\t\tclass: 'bar-peers',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'others',\n\t\t\t\t\tclass: 'bar-others',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'juniors',\n\t\t\t\t\tclass: 'bar-juniors',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tvar d1 = {\n\t\t\tlabels: [skill],\n\t\t\tseries: [ \n\t\t\t\t{\n\t\t\t\t\tlabel: 'you',\n\t\t\t\t\tclass: 'bar-you',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'others like you',\n\t\t\t\t\tclass: 'bar-rest',\n\t\t\t\t\tvalues: [getRandomFloat()]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tdataSets.push( [ d0, d1 ] );\n\t\tvar you = d1.series[0].values[0];\n\t\tvar others = d1.series[1].values[0];\n\t\tvar diff = Math.round10( you - others, -2 );\n\t\tvar rag = calcRagMap(diff);\n\n\t\tdiffs[skill] = {\n\t\t\tvalue: diff, //IMPORTANT: This is assuming series[0] is 'you' and series[1] is 'others'.\n\t\t\trag: rag\n\t\t};\n\t}\n\t$scope.dataSets = dataSets;\n\t$scope.diffs = diffs;\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('SkillSelectCtrl', ['$scope', 'Skill', function($scope, Skill){\n\n\t$scope.max = 5;\n\t$scope.firstNToCheck = 5;\n\n\t/*\tAssume rank1 to be the ranking among people in the same career,\n\t\tand rank2 the ranking among people with the same career and seniority.\n\t*/\n\t/*$scope.skills = _.sortBy([\n\t\t{ id:  1, etc: 2, type: 'i', rankings: { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } },\tname: \"communication\", \t\t\t\t\t\t},\n\t\t{ id:  2, etc: 2, type: 'i', rankings: { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"leadership\", \t\t\t\t\t\t},\n\t\t{ id:  3, etc: 2, type: 'i', rankings: { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"teamwork\", \t\t\t\t\t\t\t},\n\t\t{ id:  4, etc: 2, type: 'i', rankings: { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"effective presentations\", \t\t\t},\n\t\t{ id:  5, etc: 2, type: 'i', rankings: { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } },\tname: \"results orientation\", \t\t\t\t},\n\t\t{ id:  6, etc: 2, type: 'i', rankings: { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } },\tname: \"time management\", \t\t\t\t\t},\n\t\t{ id:  7, etc: 2, type: 'i', rankings: { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } },\tname: \"thinks outside the box\", \t\t\t},\n\t\t{ id:  8, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"attention to detail\", \t\t\t\t},\n\t\t{ id:  9, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } },\tname: \"analytical thinking\", \t\t\t\t},\n\t\t{ id: 10, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"applies technology to tasks\", \t\t},\n\t\t{ id: 11, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"change management\", \t\t\t\t\t},\n\t\t{ id: 12, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"conflict management\", \t\t\t\t},\n\t\t{ id: 13, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"creative thinking\", \t\t\t\t\t},\n\t\t{ id: 14, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"customer focus\", \t\t\t\t\t},\n\t\t{ id: 15, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"decision making\", \t\t\t\t\t},\n\t\t{ id: 16, etc: 2, type: 'i', rankings: { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"developing others\", \t\t\t\t\t},\n\t\t{ id: 17, etc: 2, type: 'i', rankings: { rank1: {value: 2, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } },\tname: \"diagnostic information gathering\",\t},\n\t\t{ id: 18, etc: 2, type: 'i', rankings: { rank1: {value: 2, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } },\tname: \"empowering others\", \t\t\t\t\t},\n\t\t{ id: 19, etc: 2, type: 'i', rankings: { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } },\tname: \"ethics and integrity\", \t\t\t\t},\n\t\t{ id: 20, etc: 2, type: 'i', rankings: { rank1: {value: 1, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } },\tname: \"flexibility\", \t\t\t\t\t\t}\n\t], function(skill){\n\t\treturn -skill.rankings.rank2.value;\n\t});*/\n\n\t$scope.skills = _.sortBy([\n\t\tnew Skill( 1, 2, 'i', { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } }, \"communication\" \t\t\t\t\t\t),\n\t\tnew Skill( 2, 2, 'i', { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"leadership\" \t\t\t\t\t\t\t),\n\t\tnew Skill( 3, 2, 'i', { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"teamwork\" \t\t\t\t\t\t\t),\n\t\tnew Skill( 4, 2, 'i', { rank1: {value: 5, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"effective presentations\" \t\t\t),\n\t\tnew Skill( 5, 2, 'i', { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } }, \"results orientation\" \t\t\t\t),\n\t\tnew Skill( 6, 2, 'i', { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } }, \"time management\"\t\t\t\t\t\t),\n\t\tnew Skill( 7, 2, 'i', { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } }, \"thinks outside the box\" \t\t\t\t),\n\t\tnew Skill( 8, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"attention to detail\" \t\t\t\t),\n\t\tnew Skill( 9, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 5, percent: 0, labelClass: '' } }, \"analytical thinking\" \t\t\t\t),\n\t\tnew Skill(10, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"applies technology to tasks\" \t\t),\n\t\tnew Skill(11, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"change management\" \t\t\t\t\t),\n\t\tnew Skill(12, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"conflict management\" \t\t\t\t),\n\t\tnew Skill(13, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"creative thinking\" \t\t\t\t\t),\n\t\tnew Skill(14, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"customer focus\" \t\t\t\t\t\t),\n\t\tnew Skill(15, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"decision making\" \t\t\t\t\t),\n\t\tnew Skill(16, 2, 'i', { rank1: {value: 3, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"developing others\" \t\t\t\t\t),\n\t\tnew Skill(17, 2, 'i', { rank1: {value: 2, percent: 0, labelClass: '' }, rank2: {value: 4, percent: 0, labelClass: '' } }, \"diagnostic information gathering\"\t),\n\t\tnew Skill(18, 2, 'i', { rank1: {value: 2, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } }, \"empowering others\" \t\t\t\t\t),\n\t\tnew Skill(19, 2, 'i', { rank1: {value: 4, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } }, \"ethics and integrity\" \t\t\t\t),\n\t\tnew Skill(20, 2, 'i', { rank1: {value: 1, percent: 0, labelClass: '' }, rank2: {value: 3, percent: 0, labelClass: '' } }, \"flexibility\" \t\t\t\t\t\t)\n\t], function(skill){\n\t\treturn -skill.rankings.rank2.value;\n\t});\n\n\tfor (var i = 0; i < $scope.firstNToCheck; i++) {\n\t\t$scope.skills[i].selected = true;\n\t\t//$scope.survey.skills.push($scope.skills[i]);\n\t\t$scope.survey.addSkill($scope.skills[i]);\n\t};\n\n\t$scope.toggleSkillSelect = function(skill){\n\n\t\tvar selected = skill.selected;\n\n\t\tif(selected){\n\t\t\t//$scope.survey.skills.push(skill);\n\t\t\t$scope.survey.addSkill(skill);\n\t\t}\n\t\telse{\n\t\t\t/*var index = _.findIndex($scope.survey.skills, function(s){\n\t\t\t\treturn s.id === skill.id;\n\t\t\t});\n\t\t\tif(index >= 0){\n\t\t\t\t$scope.survey.skills.splice(index, 1);\n\t\t\t}*/\n\t\t\t$scope.survey.removeSkill(skill);\n\t\t}\n\n\t\t//console.log(_.pluck($scope.survey.skills, 'name'))\n\t};\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('StatusCtrl', ['$scope', 'Survey', 'SessionSrv', function($scope, Survey, SessionSrv){\n\n\t$scope.survey = SessionSrv.getSurvey();\n\n\t//Simulate answered as invited-1\n\tvar guestsSummary = $scope.survey.guestsSummary;\n\tfor (var property in guestsSummary) {\n\t\tif (guestsSummary.hasOwnProperty(property)) {\n\t\t\t\n\t\t\tvar invited = guestsSummary[property]['invited'];\n\t\t\tvar answered = Math.floor(Math.random()*10)%(invited+1);\n\n\t\t\tguestsSummary[property]['answered'] = answered;\n\n\t\t\t$scope.survey.guestsTotals.answered += answered;\n\t\t}\n\t}\n\n\t$scope.writeReminderIsCollapsed = true;\n\n\t//window.$scope = $scope;\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('UsrInfoCtrl', ['$scope', function($scope){\n\n}]);\n\n\n\t",
    "\"use strict\";\n\nangular.module('qhack').controller('WizardCtrl', ['$scope', '$state', 'Survey', 'SessionSrv', function($scope, $state, Survey, SessionSrv){\n\n\t/*$scope.survey = {\n\t\tuser:\t\t{},\n\t\tcareer:\t\t\"\",\n\t\tlevel:\t\t\"\",\n\t\tcustMsg:\t\t\"I'm a custom message\",\n\t\tskills:\t\t[],\n\t\tguests:\t\t[],\n\t};*/\n\n\t$scope.user = {\n\t\tname: \"\",\n\t\temail: \"\"\n\t};\n\n\t$scope.survey = new Survey(\n\t\t$scope.user, //user\n\t\t\"\", // career\n\t\t\"\", //level\n\t\t\"I'm a custom message\" //custMsg\n\t);\n\n\t//window.$scope = $scope;\n\tSessionSrv.setUser($scope.user);\n\t\n\t$scope.$watchCollection( 'survey', function(newSurvey, oldSurvey){\n\t\t//console.log(\"Survey: %o\", $scope.survey);\n\t\tSessionSrv.setSurvey($scope.survey);\n\t});\n\n\t$scope.submit = function(){\n\t\t$scope.survey.submit();\n\t\tSessionSrv.setSurvey($scope.survey);\n\t\t$state.go('main.status');\n\t};\n}]);\n\n\n",
    "\"use strict\";\nangular.module('qhack').directive('skillsList', ['$filter', '$timeout', function($filter, $timeout){\n\t// Runs during compile\n\n\treturn {\n\t\t// name: '',\n\t\t// priority: 1,\n\t\t// terminal: true,\n\t\t// {} = isolate, true = child, false/undefined = no change\n\t\tscope: {\n\t\t\tsurvey: '=',\n\t\t\tplaceholder: '=',\n\t\t\tlabel: '=',\n\t\t},\n\t\t// controller: function($scope, $element, $attrs, $transclude) {},\n\t\t//require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n\t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\n\t\t// template: '',\n\t\ttemplateUrl: 'views/dir/skills-list.html',\n\t\treplace: true,\n\t\t// transclude: true,\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n\t\tlink: function($scope, iElm, iAttrs, controller) {\n\n\t\t\t/*$scope.newTag = \"\";\n\n\t\t\t$scope.addTag = function(){\n\t\t\n\t\t\t\tif(!$scope.tags){\n\t\t\t\t\t$scope.tags = [];\n\t\t\t\t}\n\n\t\t\t\tif($scope.newTag.trim() != \"\" && !_.contains($scope.tags, $scope.newTag, 0)){\n\t\t\t\t\t$scope.tags.push($scope.newTag);\n\t\t\t\t\t$scope.newTag = \"\";\n\t\t\t\t}\n\t\t\t};*/\n\n\t\t\t$scope.removeSkill = function(skill){\n\t\t\t\tskill.selected = false;\n\t\t\t\t$scope.survey.removeSkill(skill);\n\t\t\t};\n\t\t\t\n\t\t}\n\t};\n}]);",
    "\"use strict\";\nangular.module('qhack').directive('spiderwebChart', [function(){\n\t// Runs during compile\n\n\treturn {\n\t\t// name: '',\n\t\t// priority: 1,\n\t\t// terminal: true,\n\t\t// {} = isolate, true = child, false/undefined = no change\n\t\tscope: {\n\t\t\tdata: '=',\n\t\t},\n\t\t// controller: function($scope, $element, $attrs, $transclude) {},\n\t\t//require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n\t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\n\t\ttemplate: '<div id=\"chart1\" class=\"chart\"></div>',\n\t\t// templateUrl: 'views/dir/spiderweb-chart.html',\n\t\treplace: true,\n\t\t// transclude: true,\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n\t\tlink: function($scope, iElm, iAttrs, controller) {\n\n\t\t\tvar w = 400;\n\t\t\tvar h = 400;\n\n\t\t\tvar cfg = {\n\t\t\t\t//containerClass: 'radar-chart', // target with css, default stylesheet targets .radar-chart\n\t\t\t\tw: w,\n\t\t\t\th: h,\n\t\t\t\tfactor: 1,//0.95,\n\t\t\t\tfactorLegend: 1,\n\t\t\t\tlevels: 5,\n\t\t\t\tmaxValue: 5,\n\t\t\t\tradians: 2 * Math.PI,\n\t\t\t\t//color: d3.scale.category10(), // pass a noop (function() {}) to decide color via css\n\t\t\t\tcolor: function(){},\n\t\t\t\topacityArea: 0.3,\n\t\t\t\taxisLine: true,\n\t\t\t\taxisText: true,\n\t\t\t\tcircles: true,\n\t\t\t\tradius: 5,\n\t\t\t\taxisJoin: function(d, i) {\n\t\t\t\t\treturn d.className || i;\n\t\t\t\t},\n\t\t\t\ttransitionDuration: 300,\n\t\t\t\tExtraWidthX: 200,\n\t\t\t\tExtraWidthY: 80,\n\t\t\t\tTranslateX: 90,\n\t\t\t};\n\n\t\t\tRadarChart.draw(\"#chart1\", $scope.data, cfg);\n\t\t\t\n\n\t\t\t\n\t\t}\n\t};\n}]);",
    "\"use strict\";\nangular.module('qhack').directive('vertGroupBarChart', [function(){\n\t// Runs during compile\n\n\treturn {\n\t\t// name: '',\n\t\t// priority: 1,\n\t\t// terminal: true,\n\t\t// {} = isolate, true = child, false/undefined = no change\n\t\tscope: {\n\t\t\tchartId: '=',\n\t\t\tdata: '=',\n\t\t},\n\t\t// controller: function($scope, $element, $attrs, $transclude) {},\n\t\t//require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n\t\trestrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment\n\t\ttemplate: '<div id=\"{{chartId}}\" class=\"chart\"></div>',\n\t\t// templateUrl: 'views/dir/spiderweb-chart.html',\n\t\treplace: true,\n\t\t// transclude: true,\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n\t\tlink: function($scope, iElm, iAttrs, controller) {\n\n\t\t\tvar data = $scope.data;\n\n\t\t\tvar chartWidth\t\t\t = 200,\n\t\t\t\t\tbarHeight\t\t = 20,\n\t\t\t\t\tgroupHeight\t\t = barHeight * data.series.length,\n\t\t\t\t\tgapBetweenGroups = 10,\n\t\t\t\t\tspaceForLabels\t = 0, //150,\n\t\t\t\t\tspaceForLegend\t = 100,\n\t\t\t\t\tscaleMax\t\t = 5,\n\t\t\t\t\tbarTextOffset\t = 25; //-3\n\n\t\t\t// Zip the series data together (first values, second values, etc.)\n\t\t\tvar zippedData = [];\n\t\t\tvar zippedClasses = [];\n\t\t\tfor (var i=0; i<data.labels.length; i++) {\n\t\t\t\tfor (var j=0; j<data.series.length; j++) {\n\t\t\t\t\tzippedData.push(data.series[j].values[i]);\n\t\t\t\t\tzippedClasses.push(data.series[j].class);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Color scale\n\t\t\tvar color = d3.scale.category20();\n\t\t\tvar chartHeight = barHeight * zippedData.length + gapBetweenGroups * data.labels.length;\n\n\t\t\tvar x = d3.scale.linear()\n\t\t\t\t\t.domain([0, d3.max( zippedData.concat(scaleMax) )])\n\t\t\t\t\t.range([0, chartWidth]);\n\n\t\t\tvar y = d3.scale.linear()\n\t\t\t\t\t.range([chartHeight + gapBetweenGroups, 0]);\n\n\t\t\tvar yAxis = d3.svg.axis()\n\t\t\t\t\t.scale(y)\n\t\t\t\t\t.tickFormat('')\n\t\t\t\t\t.tickSize(0)\n\t\t\t\t\t.orient(\"left\");\n\n\t\t\t// Specify the chart area and dimensions\n\t\t\tvar chart = d3.select(iElm[0])\n\t\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"class\", \"vert-group-bar-chart\")\n\t\t\t\t\t//.attr(\"width\", spaceForLabels + chartWidth + spaceForLegend)\n\t\t\t\t\t//.attr(\"height\", chartHeight)\n\t\t\t\t\t.attr(\"viewBox\", \"0 0 \" + parseInt(spaceForLabels + chartWidth + spaceForLegend) + \" \" + parseInt(chartHeight))\n\n\t\t\t// Create bars\n\t\t\tvar bar = chart.selectAll(\"g\")\n\t\t\t\t\t.data(zippedData)\n\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t.attr(\"transform\", function(d, i) {\n\t\t\t\t\t\treturn \"translate(\" + spaceForLabels + \",\" + (i * barHeight + gapBetweenGroups * (0.5 + Math.floor(i/data.series.length))) + \")\";\n\t\t\t\t\t});\n\n\t\t\t// Create bars of the correct width\n\t\t\tbar.append(\"rect\")\n\t\t\t\t\t//.attr(\"fill\", function(d,i) { return color(i % data.series.length); })\n\t\t\t\t\t.attr(\"class\", function (d, i) {\n\t\t\t\t\t\treturn \"bar \" + zippedClasses[i];\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"width\", x)\n\t\t\t\t\t.attr(\"height\", barHeight - 1);\n\n\t\t\t// Add text label in bar\n\t\t\tbar.append(\"text\")\n\t\t\t\t\t.attr(\"x\", function(d) { return x(d) + barTextOffset; })\n\t\t\t\t\t.attr(\"y\", barHeight / 2)\n\t\t\t\t\t//.attr(\"fill\", \"red\")\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.text(function(d) { return d; });\n\n\t\t\t// Draw labels\n\t\t\tbar.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t\t.attr(\"x\", function(d) { return - 10; })\n\t\t\t\t\t.attr(\"y\", groupHeight / 2)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.text(function(d,i) {\n\t\t\t\t\t\tif (i % data.series.length === 0)\n\t\t\t\t\t\t\treturn data.labels[Math.floor(i/data.series.length)];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t});\n\n\t\t\tchart.append(\"g\")\n\t\t\t\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + spaceForLabels + \", \" + -gapBetweenGroups/2 + \")\")\n\t\t\t\t\t\t.call(yAxis);\n\n\t\t\t// Draw legend\n\t\t\tvar legendRectSize = barHeight-1,\n\t\t\t\t\tlegendSpacing\t= 1;\n\n\t\t\tvar legend = chart.selectAll('.legend')\n\t\t\t\t\t.data(data.series)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('g')\n\t\t\t\t\t.attr('transform', function (d, i) {\n\t\t\t\t\t\t\tvar height = legendRectSize + legendSpacing;\n\t\t\t\t\t\t\tvar offset = -gapBetweenGroups/2;\n\t\t\t\t\t\t\tvar horz = spaceForLabels + chartWidth + 45 - legendRectSize;\n\t\t\t\t\t\t\tvar vert = i * height - offset;\n\t\t\t\t\t\t\treturn 'translate(' + horz + ',' + vert + ')';\n\t\t\t\t\t});\n\n\t\t\t/*legend.append('rect')\n\t\t\t\t\t.attr('width', legendRectSize)\n\t\t\t\t\t.attr('height', legendRectSize)\n\t\t\t\t\t.attr('class', function (d, i) {\n\t\t\t\t\t\treturn d.class;\n\t\t\t\t\t});*/\n\t\t\t\t\t//.style('fill', function (d, i) { return color(i); });\n\t\t\t\t\t//.style('stroke', function (d, i) { return color(i); });\n\n\t\t\tlegend.append('text')\n\t\t\t\t\t.attr('class', 'legend')\n\t\t\t\t\t//.attr('x', legendRectSize + legendSpacing + 5)\n\t\t\t\t\t.attr('x', legendSpacing + 5)\n\t\t\t\t\t.attr('y', legendRectSize - legendSpacing - 5)\n\t\t\t\t\t.text(function (d) { return d.label; });\n\n\t\t}\n\t};\n}]);",
    "\"use strict\";\n\nangular.module('qhack').factory('Skill', [function(){\n\n\tfunction Skill(id, etc, type, rankings, name, desc, indicators){\n\t\t\n\t\tthis.id = id;\n\t\tthis.etc = etc;\n\t\tthis.type = type;\n\t\tthis.rankings = rankings;\n\t\tthis.name = name;\n\t\tthis.desc = desc;\n\t\tthis.indicators = indicators;\n\n\t\tfor(var property in rankings){\n\t\t\tvar rank;\n\t\t\tif (rankings.hasOwnProperty(property)) {\n\t\t\t\trank = rankings[property];\n\t\t\t\trank.percent = 100 * (rank.value / 5);\n\t\t\n\t\t\t\tif(rank.percent < 30){\n\t\t\t\t\trank.labelClass = 'label-warning';\n\t\t\t\t}\n\t\t\t\telse if(rank.percent >= 30 && rank.percent<70){\n\t\t\t\t\trank.labelClass = 'label-info';\n\t\t\t\t}\n\t\t\t\telse{// if($scope.percent>=70)\n\t\t\t\t\trank.labelClass = 'label-success';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn Skill;\n}]);",
    "\"use strict\";\n\nangular.module('qhack').factory('Survey', ['Skill', function(Skill){\n\n\tfunction Survey(user, career, level, custMsg){\n\n\t\tthis.user = user;\n\t\tthis.career = career;\n\t\tthis.level = level;\n\t\tthis.custMsg = custMsg;\n\t\t\n\t\tthis.status = {}\n\n\t\tthis.etc = 0;\n\n\t\tthis.skills = [];\n\t\tthis.guests = [];\n\n\t\tthis.guestsSummary = {};\n\t\tthis.guestsTotals = {};\n\n\t\tthis.status = Survey.STATUS_NEW;\n\t}\n\n\t//var STATUS_NEW\t= {id: 01, desc: gettext('STATUS_NEW')};\n\tvar STATUS_NEW\t= {id: 0, desc: 'STATUS_NEW'};\n\tvar STATUS_SENT\t= {id: 1, desc: 'STATUS_SENT'};\n\t//Use angular.copy to prevent unwanted modifcations of these constants.\n\tSurvey.STATUS_NEW = angular.copy(STATUS_NEW);\n\tSurvey.STATUS_SENT = angular.copy(STATUS_SENT);\n\n\tSurvey.prototype.calcEtc = function(){\n\t\tthis.skills.forEach(function(skill){\n\n\t\t\tif(skill instanceof Skill && skill.etc && !isNaN(skill.etc)){\n\t\t\t\tthis.etc += skill.etc;\n\t\t\t}\n\t\t\t\n\t\t});\n\t};\n\n\tSurvey.prototype.addSkill = function(skill){\n\t\t//console.log(\"pushing %o into %o\", skill, this.skills);\n\t\t\n\t\tif(skill instanceof Skill){\n\t\t\t//if(!this.skills){this.skills = new Array()}\n\t\t\tthis.skills.push(skill);\n\t\t\tthis.etc += skill.etc;\n\t\t}\n\t\telse{\n\t\t\tthrow Error(\"Can't add object %o to Skills structure. It is not of type Skill\", skill);\n\t\t}\n\t\t//console.log(_.pluck(this.skills, 'name'))\n\t}\n\n\tSurvey.prototype.removeSkill = function(skill){\n\t\tvar index = _.findIndex(this.skills, function(s){\n\t\t\treturn s.id === skill.id;\n\t\t});\n\t\tif(index >= 0){\n\t\t\tthis.skills.splice(index, 1);\n\t\t\tthis.etc -= skill.etc;\n\t\t}\n\t\tconsole.log(_.pluck(this.skills, 'name'))\n\t};\n\n\tSurvey.prototype.addGuest = function(guest){\n\t\tthis.guests.push(guest);\n\t\tthis.recalcGuestsSummary();\n\t};\n\n\tSurvey.prototype.removeGuest = function(guest){\n\t\tthis.guests = _.without(this.guests, guest);\n\t\tthis.recalcGuestsSummary();\n\t};\n\n\tSurvey.prototype.recalcGuestsSummary = function(){\n\t\t\n\t\tvar l = this.guests.length;\n\t\t\n\t\tthis.guestsTotals = {\n\t\t\tanswered: 0,\n\t\t\tinvited: l\n\t\t};\n\n\t\tthis.guestsSummary = {}; //Reset it before recalculating.\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tvar guest = this.guests[i];\n\t\t\tvar typeName = guest.type.name;\n\t\t\t\n\t\t\tvar typeTotals = this.guestsSummary[typeName]; //{answered: 0, invited:0}\n\t\t\tif(typeTotals){\n\t\t\t\ttypeTotals.invited++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.guestsSummary[typeName] = {\n\t\t\t\t\tanswered: 0,\n\t\t\t\t\tinvited: 1\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t};\n\n\tSurvey.prototype.submit = function(){\n\t\tthis.status = Survey.STATUS_SENT;\n\t}\n\n\tSurvey.prototype.isSent = function(){\n\t\treturn this.status.id === Survey.STATUS_SENT.id;\n\t};\n\n\tSurvey.fromObj = function(obj){\n\t\t\n\t\tvar survey = new Survey();\n\n\t\tfor(var prop in obj){\n\t\t\tif(obj.hasOwnProperty(prop)){\n\t\t\t\t//console.log(\"%o:%o\", prop, obj[prop]);\n\t\t\t\tsurvey[prop] = obj[prop];\n\t\t\t}\n\t\t}\n\t\n\t\treturn survey;\n\t};\n\n\treturn Survey;\n}]);",
    "\"use strict\";\n//angular.module('qhack').factory('SessionSrv', ['$q', 'RestCliSrv', function($q, RestCliSrv){\nangular.module('qhack').factory('SessionSrv', [ '$cookies', 'Survey', function($cookies, Survey){\n\t\n\tvar _user; //Object\n\tvar _survey = Survey.fromObj($cookies.getObject('survey')); //Survey\n\tconsole.log(\"    Initialized _survey from cookie: %o\", _survey);\n\n\treturn {\n\n\t\tsetUser: function(user){\n\t\t\t_user = user;\n\t\t},\n\n\t\tgetUser: function(){\n\t\t\treturn _user;\n\t\t},\n\n\t\tsetSurvey: function(survey){\n\t\t\t_survey = survey;\n\t\t\t$cookies.putObject('survey', _survey);\n\t\t},\n\n\t\tgetSurvey: function(){\n\t\t\tconsole.log(\"getSurvey: %o\", _survey);\n\t\t\treturn _survey;\n\t\t},\n\n\t\t/*_getUser: function(){\n\n\t\t\tif(!_user){\n\t\t\t\tconsole.log(\"2) SessionSrv _user is undefined, will GET it from server\");\n\t\t\t\treturn RestCliSrv.getUser().then(function(user){\n\t\t\t\t\t_user = user;\n\t\t\t\t\tconsole.log(\"3) Session attached to _user %o\", _user);\n\t\t\t\t\treturn _user;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"2) SessionSrv _user is already defined\");\n\t\t\t\treturn $q.when(_user);\n\t\t\t}\n\t\t},\n\n\t\tgetUserByUserPassword: function(userId, password){\n\t\t\tif(!_user){\n\t\t\t\t//console.log(\"SessionSrv _user is undefined\");\n\t\t\t\treturn RestCliSrv.getUserByUserPassword().then(function(user){\n\t\t\t\t\t_user = user;\n\t\t\t\t\treturn _user;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//console.log(\"SessionSrv _user is already defined\");\n\t\t\t\treturn $q.when(_user);\n\t\t\t}\n\t\t},*/\n\t\t\n\t\t\n\t};\n}]);",
    "var app = require('./js/app');\n\nvar WizardCtrl = require('./js/ctrl/WizardCtrl');\nvar LoginCtrl = require('./js/ctrl/LoginCtrl');\nvar UsrInfoCtrl = require('./js/ctrl/UsrInfoCtrl');\nvar CareerSelectCtrl = require('./js/ctrl/CareerSelectCtrl');\nvar SkillSelectCtrl = require('./js/ctrl/SkillSelectCtrl');\nvar GuestSelectCtrl = require('./js/ctrl/GuestSelectCtrl');\nvar CustMsgCtrl = require('./js/ctrl/CustMsgCtrl');\nvar ReportCtrl = require('./js/ctrl/ReportCtrl');\nvar StatusCtrl = require('./js/ctrl/StatusCtrl');\nvar NavBarCtrl = require('./js/ctrl/NavBarCtrl');\n\nvar skillsList = require('./js/dir/skillsList');\nvar spiderwebChart = require('./js/dir/spiderweb-chart');\nvar vertGroupBarChart = require('./js/dir/vert-group-bar-chart');\n\nvar SessionSrv = require('./js/srv/SessionSrv');\n\nvar Skill = require('./js/models/Skill');\nvar Survey = require('./js/models/Survey');\n\n\n"
  ]
}